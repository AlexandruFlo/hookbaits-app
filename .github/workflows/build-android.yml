name: Android Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.22.2'

      - name: Create Flutter project
        run: |
          flutter create mobile_app --org com.hookbaits --project-name hookbaits_shop --platforms=android
          cd mobile_app
          flutter pub add http webview_flutter provider cached_network_image shared_preferences

      - name: Create main app with navigation
        working-directory: mobile_app
        run: |
          mkdir -p lib/screens lib/state lib/widgets
          echo 'import "package:flutter/material.dart";' > lib/main.dart
          echo 'import "package:provider/provider.dart";' >> lib/main.dart
          echo 'import "screens/main_navigation.dart";' >> lib/main.dart
          echo 'import "state/cart_state.dart";' >> lib/main.dart
          echo 'void main() => runApp(HookbaitsApp());' >> lib/main.dart
          echo 'class HookbaitsApp extends StatelessWidget {' >> lib/main.dart
          echo '  Widget build(BuildContext context) {' >> lib/main.dart
          echo '    return ChangeNotifierProvider(' >> lib/main.dart
          echo '      create: (context) => CartState(),' >> lib/main.dart
          echo '      child: MaterialApp(' >> lib/main.dart
          echo '        title: "Hookbaits",' >> lib/main.dart
          echo '        theme: ThemeData(primarySwatch: Colors.blue),' >> lib/main.dart
          echo '        home: MainNavigation(),' >> lib/main.dart
          echo '      ),' >> lib/main.dart
          echo '    );' >> lib/main.dart
          echo '  }' >> lib/main.dart
          echo '}' >> lib/main.dart

      - name: Create all app files
        working-directory: mobile_app
        run: |
          echo 'class Config { static const String baseUrl = "https://hookbaits.ro"; static const String consumerKey = String.fromEnvironment("WC_CONSUMER_KEY", defaultValue: ""); static const String consumerSecret = String.fromEnvironment("WC_CONSUMER_SECRET", defaultValue: ""); }' > lib/config.dart
          echo 'import "package:flutter/foundation.dart"; import "package:http/http.dart" as http; import "dart:convert"; import "../config.dart"; class CartState extends ChangeNotifier { List _items = []; String? _orderId; List get items => _items; int get itemCount => _items.length; double get total => _items.fold(0, (sum, item) => sum + (double.tryParse(item["price"].toString()) ?? 0)); void add(Map product) { final existingIndex = _items.indexWhere((item) => item["id"] == product["id"]); if (existingIndex >= 0) { _items[existingIndex]["quantity"] = (_items[existingIndex]["quantity"] ?? 1) + 1; } else { product["quantity"] = 1; _items.add(product); } notifyListeners(); } void remove(int index) { _items.removeAt(index); notifyListeners(); } void updateQuantity(int index, int quantity) { if (quantity > 0) { _items[index]["quantity"] = quantity; } else { _items.removeAt(index); } notifyListeners(); } void clear() { _items.clear(); notifyListeners(); } Future<bool> createOrder(Map<String, dynamic> billingDetails) async { try { final orderData = { "payment_method": "cod", "payment_method_title": "Plata la livrare", "set_paid": false, "billing": billingDetails, "shipping": billingDetails, "line_items": _items.map((item) => { "product_id": item["id"], "quantity": item["quantity"] ?? 1, }).toList(), "shipping_lines": [{ "method_id": "flat_rate", "method_title": "Livrare standard", "total": "15.00" }] }; final response = await http.post( Uri.parse("${Config.baseUrl}/wp-json/wc/v3/orders"), headers: { "Content-Type": "application/json", "Authorization": "Basic " + base64Encode(utf8.encode("${Config.consumerKey}:${Config.consumerSecret}")) }, body: json.encode(orderData), ); if (response.statusCode == 201) { final order = json.decode(response.body); _orderId = order["id"].toString(); clear(); return true; } return false; } catch (e) { return false; } } }' > lib/state/cart_state.dart
          
          cat > lib/screens/main_navigation.dart << 'EOF'
          import 'package:flutter/material.dart';
          import 'package:provider/provider.dart';
          import '../state/cart_state.dart';
          import 'home_screen.dart';
          import 'cart_screen.dart';
          import 'account_screen.dart';
          
          class MainNavigation extends StatefulWidget {
            @override
            _MainNavigationState createState() => _MainNavigationState();
          }
          
          class _MainNavigationState extends State<MainNavigation> {
            int _currentIndex = 0;
            final List<Widget> _screens = [
              HomeScreen(),
              CartScreen(),
              AccountScreen(),
            ];
          
            @override
            Widget build(BuildContext context) {
              return Scaffold(
                body: _screens[_currentIndex],
                bottomNavigationBar: BottomNavigationBar(
                  currentIndex: _currentIndex,
                  onTap: (index) => setState(() => _currentIndex = index),
                  type: BottomNavigationBarType.fixed,
                  items: [
                    BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Acasă'),
                    BottomNavigationBarItem(
                      icon: Stack(
                        children: [
                          Icon(Icons.shopping_cart),
                          Consumer<CartState>(
                            builder: (context, cart, child) {
                              if (cart.itemCount > 0) {
                                return Positioned(
                                  right: 0, top: 0,
                                  child: Container(
                                    padding: EdgeInsets.all(2),
                                    decoration: BoxDecoration(
                                      color: Colors.red,
                                      borderRadius: BorderRadius.circular(8),
                                    ),
                                    constraints: BoxConstraints(minWidth: 16, minHeight: 16),
                                    child: Text(
                                      cart.itemCount.toString(),
                                      style: TextStyle(color: Colors.white, fontSize: 10),
                                      textAlign: TextAlign.center,
                                    ),
                                  ),
                                );
                              }
                              return SizedBox();
                            },
                          ),
                        ],
                      ),
                      label: 'Coș',
                    ),
                    BottomNavigationBarItem(icon: Icon(Icons.person), label: 'Cont'),
                  ],
                ),
              );
            }
          }
          EOF
          
          cat > lib/screens/home_screen.dart << 'EOF'
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:provider/provider.dart';
import '../state/cart_state.dart';
import '../config.dart';

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  List products = [];
  bool loading = true;

  @override
  void initState() {
    super.initState();
    loadProducts();
  }

  loadProducts() async {
    try {
      final response = await http.get(Uri.parse('${Config.baseUrl}/wp-json/wc/v3/products?per_page=50'));
      if (response.statusCode == 200) {
        setState(() {
          products = json.decode(response.body);
          loading = false;
        });
      }
    } catch (e) {
      setState(() => loading = false);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: Row(
          children: [
            Icon(Icons.anchor, color: Colors.white),
            SizedBox(width: 10),
            Text('HOOKBAITS', style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
          ],
        ),
        backgroundColor: Color(0xFFE31E24),
        elevation: 0,
      ),
      body: loading 
        ? Center(child: CircularProgressIndicator(color: Color(0xFFE31E24)))
        : GridView.builder(
            padding: EdgeInsets.all(16),
            gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
              crossAxisCount: 2,
              childAspectRatio: 0.65,
              crossAxisSpacing: 12,
              mainAxisSpacing: 16,
            ),
            itemCount: products.length,
            itemBuilder: (context, index) {
              final product = products[index];
              return Container(
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(8),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.grey.withOpacity(0.2),
                      spreadRadius: 1,
                      blurRadius: 5,
                      offset: Offset(0, 2),
                    ),
                  ],
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Expanded(
                      flex: 3,
                      child: ClipRRect(
                        borderRadius: BorderRadius.vertical(top: Radius.circular(8)),
                        child: product['images'] != null && product['images'].isNotEmpty
                          ? Image.network(
                              product['images'][0]['src'],
                              fit: BoxFit.cover,
                              width: double.infinity,
                              errorBuilder: (context, error, stackTrace) => Container(
                                color: Colors.grey[100],
                                child: Icon(Icons.image, size: 50, color: Colors.grey[400]),
                              ),
                            )
                          : Container(
                              color: Colors.grey[100],
                              child: Icon(Icons.image, size: 50, color: Colors.grey[400]),
                            ),
                      ),
                    ),
                    Expanded(
                      flex: 2,
                      child: Padding(
                        padding: EdgeInsets.all(12),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              product['name'] ?? 'Produs',
                              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 13),
                              maxLines: 2,
                              overflow: TextOverflow.ellipsis,
                            ),
                            SizedBox(height: 6),
                            Text(
                              '${product['price'] ?? '0'} RON',
                              style: TextStyle(color: Color(0xFFE31E24), fontSize: 16, fontWeight: FontWeight.bold),
                            ),
                            Spacer(),
                            Container(
                              width: double.infinity,
                              height: 32,
                              child: ElevatedButton(
                                onPressed: () {
                                  Provider.of<CartState>(context, listen: false).add(product);
                                  ScaffoldMessenger.of(context).showSnackBar(
                                    SnackBar(
                                      content: Text('${product['name']} adăugat în coș'),
                                      backgroundColor: Color(0xFFE31E24),
                                    ),
                                  );
                                },
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: Color(0xFFE31E24),
                                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(6)),
                                ),
                                child: Text('ADAUGĂ', style: TextStyle(color: Colors.white, fontSize: 11, fontWeight: FontWeight.bold)),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              );
            },
          ),
    );
  }
}
EOF
          
          cat > lib/screens/cart_screen.dart << 'EOF'
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../state/cart_state.dart';

class CartScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: Text('COȘUL MEU', style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
        backgroundColor: Color(0xFFE31E24),
        elevation: 0,
      ),
      body: Consumer<CartState>(
        builder: (context, cart, child) {
          if (cart.items.isEmpty) {
            return Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.shopping_cart_outlined, size: 100, color: Colors.grey[400]),
                  SizedBox(height: 24),
                  Text('Coșul este gol', style: TextStyle(fontSize: 20, color: Colors.grey[600])),
                  SizedBox(height: 16),
                  ElevatedButton(
                    onPressed: () {},
                    style: ElevatedButton.styleFrom(backgroundColor: Color(0xFFE31E24)),
                    child: Text('CONTINUĂ CUMPĂRĂTURILE', style: TextStyle(color: Colors.white)),
                  ),
                ],
              ),
            );
          }
          
          return Column(
            children: [
              Expanded(
                child: ListView.builder(
                  itemCount: cart.items.length,
                  itemBuilder: (context, index) {
                    final item = cart.items[index];
                    return Card(
                      margin: EdgeInsets.all(8),
                      child: ListTile(
                        leading: item['images'] != null && item['images'].isNotEmpty
                          ? Image.network(item['images'][0]['src'], width: 50, height: 50, fit: BoxFit.cover)
                          : Icon(Icons.image),
                        title: Text(item['name'] ?? 'Produs'),
                        subtitle: Text('${item['price'] ?? '0'} RON'),
                        trailing: IconButton(
                          icon: Icon(Icons.delete, color: Colors.red),
                          onPressed: () => cart.remove(index),
                        ),
                      ),
                    );
                  },
                ),
              ),
              Container(
                padding: EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Colors.white,
                  boxShadow: [BoxShadow(color: Colors.grey.withOpacity(0.2), blurRadius: 5)],
                ),
                child: Column(
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text('TOTAL:', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
                        Text('${cart.total.toStringAsFixed(2)} RON', 
                             style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Color(0xFFE31E24))),
                      ],
                    ),
                    SizedBox(height: 16),
                    Container(
                      width: double.infinity,
                      child: ElevatedButton(
                        onPressed: () {
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(content: Text('Funcționalitate în dezvoltare')),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Color(0xFFE31E24),
                          padding: EdgeInsets.symmetric(vertical: 16),
                        ),
                        child: Text('FINALIZEAZĂ COMANDA', style: TextStyle(color: Colors.white, fontSize: 16)),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          );
        },
      ),
    );
  }
}
EOF
          
          cat > lib/screens/account_screen.dart << 'EOF'
import 'package:flutter/material.dart';

class AccountScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: Text('CONTUL MEU', style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
        backgroundColor: Color(0xFFE31E24),
        elevation: 0,
      ),
      body: ListView(
        padding: EdgeInsets.all(16),
        children: [
          Container(
            padding: EdgeInsets.all(20),
            decoration: BoxDecoration(
              color: Colors.grey[50],
              borderRadius: BorderRadius.circular(12),
            ),
            child: Row(
              children: [
                CircleAvatar(
                  radius: 30,
                  backgroundColor: Color(0xFFE31E24),
                  child: Icon(Icons.person, color: Colors.white, size: 30),
                ),
                SizedBox(width: 16),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text('Conectează-te', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
                      Text('Pentru a accesa contul tău', style: TextStyle(color: Colors.grey[600])),
                    ],
                  ),
                ),
                Icon(Icons.arrow_forward_ios, color: Colors.grey[400]),
              ],
            ),
          ),
          SizedBox(height: 24),
          Card(
            child: Column(
              children: [
                ListTile(
                  leading: Icon(Icons.history, color: Color(0xFFE31E24)),
                  title: Text('Comenzile mele'),
                  subtitle: Text('Vezi istoricul comenzilor'),
                  trailing: Icon(Icons.arrow_forward_ios),
                  onTap: () => ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Funcționalitate în dezvoltare')),
                  ),
                ),
                Divider(),
                ListTile(
                  leading: Icon(Icons.favorite, color: Color(0xFFE31E24)),
                  title: Text('Produse favorite'),
                  subtitle: Text('Lista dorințelor'),
                  trailing: Icon(Icons.arrow_forward_ios),
                  onTap: () => ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Funcționalitate în dezvoltare')),
                  ),
                ),
                Divider(),
                ListTile(
                  leading: Icon(Icons.help_outline, color: Color(0xFFE31E24)),
                  title: Text('Ajutor și suport'),
                  subtitle: Text('contact@hookbaits.ro'),
                  trailing: Icon(Icons.arrow_forward_ios),
                  onTap: () => ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Pentru suport: contact@hookbaits.ro')),
                  ),
                ),
                Divider(),
                ListTile(
                  leading: Icon(Icons.info_outline, color: Color(0xFFE31E24)),
                  title: Text('Despre aplicație'),
                  subtitle: Text('Versiunea 1.0.0'),
                  trailing: Icon(Icons.arrow_forward_ios),
                  onTap: () => showDialog(
                    context: context,
                    builder: (context) => AlertDialog(
                      title: Row(
                        children: [
                          Icon(Icons.anchor, color: Color(0xFFE31E24)),
                          SizedBox(width: 12),
                          Text('Hookbaits'),
                        ],
                      ),
                      content: Text('Aplicația oficială Hookbaits pentru comenzi online de produse de pescuit premium.\n\nVersiunea: 1.0.0\nDezvoltată pentru: hookbaits.ro'),
                      actions: [
                        TextButton(
                          onPressed: () => Navigator.pop(context),
                          child: Text('OK', style: TextStyle(color: Color(0xFFE31E24))),
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
EOF

      - name: Copy app icon
        run: |
          ls -la Hook_alb-400x122.png
          mkdir -p mobile_app/assets
          cp Hook_alb-400x122.png mobile_app/assets/icon.png

      - name: Configure app icon
        working-directory: mobile_app
        run: |
          flutter pub add dev:flutter_launcher_icons
          if ! grep -q "flutter_launcher_icons:" pubspec.yaml; then
            echo '' >> pubspec.yaml
            echo 'flutter_launcher_icons:' >> pubspec.yaml
            echo '  android: true' >> pubspec.yaml
            echo '  ios: false' >> pubspec.yaml
            echo '  image_path: "assets/icon.png"' >> pubspec.yaml
            echo '  adaptive_icon_background: "#FFFFFF"' >> pubspec.yaml
            echo '  adaptive_icon_foreground: "assets/icon.png"' >> pubspec.yaml
          fi
          flutter packages get
          dart run flutter_launcher_icons:main

      - name: Configure Android
        working-directory: mobile_app
        run: |
          if [ -f android/app/build.gradle ]; then
            sed -i "s/minSdkVersion [0-9]\+/minSdkVersion 21/" android/app/build.gradle
            sed -i "s/compileSdkVersion [0-9]\+/compileSdkVersion 34/" android/app/build.gradle
            sed -i "s/targetSdkVersion [0-9]\+/targetSdkVersion 34/" android/app/build.gradle
          fi
          sed -i 's/<string name="app_name">.*<\/string>/<string name="app_name">Hookbaits<\/string>/' android/app/src/main/res/values/strings.xml

      - name: Build APK
        working-directory: mobile_app
        env:
          WC_CONSUMER_KEY: ${{ secrets.WC_CONSUMER_KEY }}
          WC_CONSUMER_SECRET: ${{ secrets.WC_CONSUMER_SECRET }}
        run: flutter build apk --release --dart-define=WC_CONSUMER_KEY="${WC_CONSUMER_KEY}" --dart-define=WC_CONSUMER_SECRET="${WC_CONSUMER_SECRET}"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: hookbaits-apk
          path: mobile_app/build/app/outputs/**/*.apk




