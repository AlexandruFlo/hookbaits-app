name: Android Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.22.2'

      - name: Create Flutter project
        run: |
          flutter create mobile_app --org com.hookbaits --project-name hookbaits_shop --platforms=android
          cd mobile_app
          flutter pub add http webview_flutter provider cached_network_image shared_preferences

      - name: Create main app with navigation
        working-directory: mobile_app
        run: |
          mkdir -p lib/screens lib/state lib/widgets
          echo 'import "package:flutter/material.dart";' > lib/main.dart
          echo 'import "package:provider/provider.dart";' >> lib/main.dart
          echo 'import "screens/main_navigation.dart";' >> lib/main.dart
          echo 'import "state/cart_state.dart";' >> lib/main.dart
          echo 'void main() => runApp(HookbaitsApp());' >> lib/main.dart
          echo 'class HookbaitsApp extends StatelessWidget {' >> lib/main.dart
          echo '  Widget build(BuildContext context) {' >> lib/main.dart
          echo '    return ChangeNotifierProvider(' >> lib/main.dart
          echo '      create: (context) => CartState(),' >> lib/main.dart
          echo '      child: MaterialApp(' >> lib/main.dart
          echo '        title: "Hookbaits",' >> lib/main.dart
          echo '        theme: ThemeData(primarySwatch: Colors.blue),' >> lib/main.dart
          echo '        home: MainNavigation(),' >> lib/main.dart
          echo '      ),' >> lib/main.dart
          echo '    );' >> lib/main.dart
          echo '  }' >> lib/main.dart
          echo '}' >> lib/main.dart

      - name: Create all app files
        working-directory: mobile_app
        run: |
          echo 'class Config { static const String baseUrl = "https://hookbaits.ro"; static const String consumerKey = String.fromEnvironment("WC_CONSUMER_KEY", defaultValue: ""); static const String consumerSecret = String.fromEnvironment("WC_CONSUMER_SECRET", defaultValue: ""); }' > lib/config.dart
          echo 'import "package:flutter/foundation.dart"; import "package:http/http.dart" as http; import "dart:convert"; import "../config.dart"; class CartState extends ChangeNotifier { List _items = []; String? _orderId; List get items => _items; int get itemCount => _items.length; double get total => _items.fold(0, (sum, item) => sum + (double.tryParse(item["price"].toString()) ?? 0)); void add(Map product) { final existingIndex = _items.indexWhere((item) => item["id"] == product["id"]); if (existingIndex >= 0) { _items[existingIndex]["quantity"] = (_items[existingIndex]["quantity"] ?? 1) + 1; } else { product["quantity"] = 1; _items.add(product); } notifyListeners(); } void remove(int index) { _items.removeAt(index); notifyListeners(); } void updateQuantity(int index, int quantity) { if (quantity > 0) { _items[index]["quantity"] = quantity; } else { _items.removeAt(index); } notifyListeners(); } void clear() { _items.clear(); notifyListeners(); } Future<bool> createOrder(Map<String, dynamic> billingDetails) async { try { final orderData = { "payment_method": "cod", "payment_method_title": "Plata la livrare", "set_paid": false, "billing": billingDetails, "shipping": billingDetails, "line_items": _items.map((item) => { "product_id": item["id"], "quantity": item["quantity"] ?? 1, }).toList(), "shipping_lines": [{ "method_id": "flat_rate", "method_title": "Livrare standard", "total": "15.00" }] }; final response = await http.post( Uri.parse("${Config.baseUrl}/wp-json/wc/v3/orders"), headers: { "Content-Type": "application/json", "Authorization": "Basic " + base64Encode(utf8.encode("${Config.consumerKey}:${Config.consumerSecret}")) }, body: json.encode(orderData), ); if (response.statusCode == 201) { final order = json.decode(response.body); _orderId = order["id"].toString(); clear(); return true; } return false; } catch (e) { return false; } } }' > lib/state/cart_state.dart
          
          cat > lib/screens/main_navigation.dart << 'EOF'
          import 'package:flutter/material.dart';
          import 'package:provider/provider.dart';
          import '../state/cart_state.dart';
          import 'home_screen.dart';
          import 'cart_screen.dart';
          import 'account_screen.dart';
          
          class MainNavigation extends StatefulWidget {
            @override
            _MainNavigationState createState() => _MainNavigationState();
          }
          
          class _MainNavigationState extends State<MainNavigation> {
            int _currentIndex = 0;
            final List<Widget> _screens = [
              HomeScreen(),
              CartScreen(),
              AccountScreen(),
            ];
          
            @override
            Widget build(BuildContext context) {
              return Scaffold(
                body: _screens[_currentIndex],
                bottomNavigationBar: BottomNavigationBar(
                  currentIndex: _currentIndex,
                  onTap: (index) => setState(() => _currentIndex = index),
                  type: BottomNavigationBarType.fixed,
                  items: [
                    BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Acasă'),
                    BottomNavigationBarItem(
                      icon: Stack(
                        children: [
                          Icon(Icons.shopping_cart),
                          Consumer<CartState>(
                            builder: (context, cart, child) {
                              if (cart.itemCount > 0) {
                                return Positioned(
                                  right: 0, top: 0,
                                  child: Container(
                                    padding: EdgeInsets.all(2),
                                    decoration: BoxDecoration(
                                      color: Colors.red,
                                      borderRadius: BorderRadius.circular(8),
                                    ),
                                    constraints: BoxConstraints(minWidth: 16, minHeight: 16),
                                    child: Text(
                                      cart.itemCount.toString(),
                                      style: TextStyle(color: Colors.white, fontSize: 10),
                                      textAlign: TextAlign.center,
                                    ),
                                  ),
                                );
                              }
                              return SizedBox();
                            },
                          ),
                        ],
                      ),
                      label: 'Coș',
                    ),
                    BottomNavigationBarItem(icon: Icon(Icons.person), label: 'Cont'),
                  ],
                ),
              );
            }
          }
          EOF
          
          echo 'import "package:flutter/material.dart";' > lib/screens/home_screen.dart
          echo 'import "package:http/http.dart" as http;' >> lib/screens/home_screen.dart
          echo 'import "dart:convert";' >> lib/screens/home_screen.dart
          echo 'import "package:provider/provider.dart";' >> lib/screens/home_screen.dart
          echo 'import "../state/cart_state.dart";' >> lib/screens/home_screen.dart
          echo 'import "../config.dart";' >> lib/screens/home_screen.dart
          echo '' >> lib/screens/home_screen.dart
          echo 'class HomeScreen extends StatefulWidget {' >> lib/screens/home_screen.dart
          echo '  @override' >> lib/screens/home_screen.dart
          echo '  _HomeScreenState createState() => _HomeScreenState();' >> lib/screens/home_screen.dart
          echo '}' >> lib/screens/home_screen.dart
          echo '' >> lib/screens/home_screen.dart
          echo 'class _HomeScreenState extends State<HomeScreen> {' >> lib/screens/home_screen.dart
          echo '  List products = [];' >> lib/screens/home_screen.dart
          echo '  bool loading = true;' >> lib/screens/home_screen.dart
          echo '' >> lib/screens/home_screen.dart
          echo '  @override' >> lib/screens/home_screen.dart
          echo '  void initState() {' >> lib/screens/home_screen.dart
          echo '    super.initState();' >> lib/screens/home_screen.dart
          echo '    loadProducts();' >> lib/screens/home_screen.dart
          echo '  }' >> lib/screens/home_screen.dart
          echo '' >> lib/screens/home_screen.dart
          echo '  loadProducts() async {' >> lib/screens/home_screen.dart
          echo '    try {' >> lib/screens/home_screen.dart
          echo '      final response = await http.get(Uri.parse("${Config.baseUrl}/wp-json/wc/v3/products?per_page=50"));' >> lib/screens/home_screen.dart
          echo '      if (response.statusCode == 200) {' >> lib/screens/home_screen.dart
          echo '        setState(() {' >> lib/screens/home_screen.dart
          echo '          products = json.decode(response.body);' >> lib/screens/home_screen.dart
          echo '          loading = false;' >> lib/screens/home_screen.dart
          echo '        });' >> lib/screens/home_screen.dart
          echo '      }' >> lib/screens/home_screen.dart
          echo '    } catch (e) {' >> lib/screens/home_screen.dart
          echo '      setState(() => loading = false);' >> lib/screens/home_screen.dart
          echo '    }' >> lib/screens/home_screen.dart
          echo '  }' >> lib/screens/home_screen.dart
          echo '' >> lib/screens/home_screen.dart
          echo '  @override' >> lib/screens/home_screen.dart
          echo '  Widget build(BuildContext context) {' >> lib/screens/home_screen.dart
          echo '    return Scaffold(' >> lib/screens/home_screen.dart
          echo '      backgroundColor: Colors.white,' >> lib/screens/home_screen.dart
          echo '      appBar: AppBar(' >> lib/screens/home_screen.dart
          echo '        title: Row(' >> lib/screens/home_screen.dart
          echo '          children: [' >> lib/screens/home_screen.dart
          echo '            Icon(Icons.anchor, color: Colors.white),' >> lib/screens/home_screen.dart
          echo '            SizedBox(width: 10),' >> lib/screens/home_screen.dart
          echo '            Text("HOOKBAITS", style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),' >> lib/screens/home_screen.dart
          echo '          ],' >> lib/screens/home_screen.dart
          echo '        ),' >> lib/screens/home_screen.dart
          echo '        backgroundColor: Color(0xFFE31E24),' >> lib/screens/home_screen.dart
          echo '        elevation: 0,' >> lib/screens/home_screen.dart
          echo '      ),' >> lib/screens/home_screen.dart
          echo '      body: loading' >> lib/screens/home_screen.dart
          echo '        ? Center(child: CircularProgressIndicator(color: Color(0xFFE31E24)))' >> lib/screens/home_screen.dart
          echo '        : GridView.builder(' >> lib/screens/home_screen.dart
          echo '            padding: EdgeInsets.all(16),' >> lib/screens/home_screen.dart
          echo '            gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(' >> lib/screens/home_screen.dart
          echo '              crossAxisCount: 2,' >> lib/screens/home_screen.dart
          echo '              childAspectRatio: 0.65,' >> lib/screens/home_screen.dart
          echo '              crossAxisSpacing: 12,' >> lib/screens/home_screen.dart
          echo '              mainAxisSpacing: 16,' >> lib/screens/home_screen.dart
          echo '            ),' >> lib/screens/home_screen.dart
          echo '            itemCount: products.length,' >> lib/screens/home_screen.dart
          echo '            itemBuilder: (context, index) {' >> lib/screens/home_screen.dart
          echo '              final product = products[index];' >> lib/screens/home_screen.dart
          echo '              return Card(' >> lib/screens/home_screen.dart
          echo '                child: Column(' >> lib/screens/home_screen.dart
          echo '                  crossAxisAlignment: CrossAxisAlignment.start,' >> lib/screens/home_screen.dart
          echo '                  children: [' >> lib/screens/home_screen.dart
          echo '                    Expanded(' >> lib/screens/home_screen.dart
          echo '                      flex: 3,' >> lib/screens/home_screen.dart
          echo '                      child: product["images"] != null && product["images"].isNotEmpty' >> lib/screens/home_screen.dart
          echo '                        ? Image.network(product["images"][0]["src"], fit: BoxFit.cover, width: double.infinity)' >> lib/screens/home_screen.dart
          echo '                        : Container(color: Colors.grey[100], child: Icon(Icons.image)),' >> lib/screens/home_screen.dart
          echo '                    ),' >> lib/screens/home_screen.dart
          echo '                    Expanded(' >> lib/screens/home_screen.dart
          echo '                      flex: 2,' >> lib/screens/home_screen.dart
          echo '                      child: Padding(' >> lib/screens/home_screen.dart
          echo '                        padding: EdgeInsets.all(8),' >> lib/screens/home_screen.dart
          echo '                        child: Column(' >> lib/screens/home_screen.dart
          echo '                          crossAxisAlignment: CrossAxisAlignment.start,' >> lib/screens/home_screen.dart
          echo '                          children: [' >> lib/screens/home_screen.dart
          echo '                            Text(product["name"] ?? "Produs", style: TextStyle(fontWeight: FontWeight.bold), maxLines: 2),' >> lib/screens/home_screen.dart
          echo '                            SizedBox(height: 4),' >> lib/screens/home_screen.dart
          echo '                            Text("${product["price"] ?? "0"} RON", style: TextStyle(color: Color(0xFFE31E24), fontWeight: FontWeight.bold)),' >> lib/screens/home_screen.dart
          echo '                            Spacer(),' >> lib/screens/home_screen.dart
          echo '                            ElevatedButton(' >> lib/screens/home_screen.dart
          echo '                              onPressed: () {' >> lib/screens/home_screen.dart
          echo '                                Provider.of<CartState>(context, listen: false).add(product);' >> lib/screens/home_screen.dart
          echo '                                ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Produs adăugat")));' >> lib/screens/home_screen.dart
          echo '                              },' >> lib/screens/home_screen.dart
          echo '                              style: ElevatedButton.styleFrom(backgroundColor: Color(0xFFE31E24)),' >> lib/screens/home_screen.dart
          echo '                              child: Text("ADAUGĂ", style: TextStyle(color: Colors.white, fontSize: 12)),' >> lib/screens/home_screen.dart
          echo '                            ),' >> lib/screens/home_screen.dart
          echo '                          ],' >> lib/screens/home_screen.dart
          echo '                        ),' >> lib/screens/home_screen.dart
          echo '                      ),' >> lib/screens/home_screen.dart
          echo '                    ),' >> lib/screens/home_screen.dart
          echo '                  ],' >> lib/screens/home_screen.dart
          echo '                ),' >> lib/screens/home_screen.dart
          echo '              );' >> lib/screens/home_screen.dart
          echo '            },' >> lib/screens/home_screen.dart
          echo '          ),' >> lib/screens/home_screen.dart
          echo '    );' >> lib/screens/home_screen.dart
          echo '  }' >> lib/screens/home_screen.dart
          echo '}' >> lib/screens/home_screen.dart
          
          echo 'import "package:flutter/material.dart";' > lib/screens/cart_screen.dart
          echo 'import "package:provider/provider.dart";' >> lib/screens/cart_screen.dart
          echo 'import "../state/cart_state.dart";' >> lib/screens/cart_screen.dart
          echo '' >> lib/screens/cart_screen.dart
          echo 'class CartScreen extends StatelessWidget {' >> lib/screens/cart_screen.dart
          echo '  @override' >> lib/screens/cart_screen.dart
          echo '  Widget build(BuildContext context) {' >> lib/screens/cart_screen.dart
          echo '    return Scaffold(' >> lib/screens/cart_screen.dart
          echo '      backgroundColor: Colors.white,' >> lib/screens/cart_screen.dart
          echo '      appBar: AppBar(' >> lib/screens/cart_screen.dart
          echo '        title: Text("COȘUL MEU", style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),' >> lib/screens/cart_screen.dart
          echo '        backgroundColor: Color(0xFFE31E24),' >> lib/screens/cart_screen.dart
          echo '        elevation: 0,' >> lib/screens/cart_screen.dart
          echo '      ),' >> lib/screens/cart_screen.dart
          echo '      body: Consumer<CartState>(' >> lib/screens/cart_screen.dart
          echo '        builder: (context, cart, child) {' >> lib/screens/cart_screen.dart
          echo '          if (cart.items.isEmpty) {' >> lib/screens/cart_screen.dart
          echo '            return Center(' >> lib/screens/cart_screen.dart
          echo '              child: Column(' >> lib/screens/cart_screen.dart
          echo '                mainAxisAlignment: MainAxisAlignment.center,' >> lib/screens/cart_screen.dart
          echo '                children: [' >> lib/screens/cart_screen.dart
          echo '                  Icon(Icons.shopping_cart_outlined, size: 100, color: Colors.grey[400]),' >> lib/screens/cart_screen.dart
          echo '                  SizedBox(height: 24),' >> lib/screens/cart_screen.dart
          echo '                  Text("Coșul este gol", style: TextStyle(fontSize: 20, color: Colors.grey[600])),' >> lib/screens/cart_screen.dart
          echo '                ],' >> lib/screens/cart_screen.dart
          echo '              ),' >> lib/screens/cart_screen.dart
          echo '            );' >> lib/screens/cart_screen.dart
          echo '          }' >> lib/screens/cart_screen.dart
          echo '          return ListView.builder(' >> lib/screens/cart_screen.dart
          echo '            itemCount: cart.items.length,' >> lib/screens/cart_screen.dart
          echo '            itemBuilder: (context, index) {' >> lib/screens/cart_screen.dart
          echo '              final item = cart.items[index];' >> lib/screens/cart_screen.dart
          echo '              return Card(' >> lib/screens/cart_screen.dart
          echo '                margin: EdgeInsets.all(8),' >> lib/screens/cart_screen.dart
          echo '                child: ListTile(' >> lib/screens/cart_screen.dart
          echo '                  leading: item["images"] != null && item["images"].isNotEmpty' >> lib/screens/cart_screen.dart
          echo '                    ? Image.network(item["images"][0]["src"], width: 50, height: 50, fit: BoxFit.cover)' >> lib/screens/cart_screen.dart
          echo '                    : Icon(Icons.image),' >> lib/screens/cart_screen.dart
          echo '                  title: Text(item["name"] ?? "Produs"),' >> lib/screens/cart_screen.dart
          echo '                  subtitle: Text("${item["price"] ?? "0"} RON"),' >> lib/screens/cart_screen.dart
          echo '                  trailing: IconButton(' >> lib/screens/cart_screen.dart
          echo '                    icon: Icon(Icons.delete, color: Colors.red),' >> lib/screens/cart_screen.dart
          echo '                    onPressed: () => cart.remove(index),' >> lib/screens/cart_screen.dart
          echo '                  ),' >> lib/screens/cart_screen.dart
          echo '                ),' >> lib/screens/cart_screen.dart
          echo '              );' >> lib/screens/cart_screen.dart
          echo '            },' >> lib/screens/cart_screen.dart
          echo '          );' >> lib/screens/cart_screen.dart
          echo '        },' >> lib/screens/cart_screen.dart
          echo '      ),' >> lib/screens/cart_screen.dart
          echo '    );' >> lib/screens/cart_screen.dart
          echo '  }' >> lib/screens/cart_screen.dart
          echo '}' >> lib/screens/cart_screen.dart
          
          echo 'import "package:flutter/material.dart";' > lib/screens/account_screen.dart
          echo '' >> lib/screens/account_screen.dart
          echo 'class AccountScreen extends StatelessWidget {' >> lib/screens/account_screen.dart
          echo '  @override' >> lib/screens/account_screen.dart
          echo '  Widget build(BuildContext context) {' >> lib/screens/account_screen.dart
          echo '    return Scaffold(' >> lib/screens/account_screen.dart
          echo '      backgroundColor: Colors.white,' >> lib/screens/account_screen.dart
          echo '      appBar: AppBar(' >> lib/screens/account_screen.dart
          echo '        title: Text("CONTUL MEU", style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),' >> lib/screens/account_screen.dart
          echo '        backgroundColor: Color(0xFFE31E24),' >> lib/screens/account_screen.dart
          echo '        elevation: 0,' >> lib/screens/account_screen.dart
          echo '      ),' >> lib/screens/account_screen.dart
          echo '      body: ListView(' >> lib/screens/account_screen.dart
          echo '        padding: EdgeInsets.all(16),' >> lib/screens/account_screen.dart
          echo '        children: [' >> lib/screens/account_screen.dart
          echo '          Container(' >> lib/screens/account_screen.dart
          echo '            padding: EdgeInsets.all(20),' >> lib/screens/account_screen.dart
          echo '            decoration: BoxDecoration(' >> lib/screens/account_screen.dart
          echo '              color: Colors.grey[50],' >> lib/screens/account_screen.dart
          echo '              borderRadius: BorderRadius.circular(12),' >> lib/screens/account_screen.dart
          echo '            ),' >> lib/screens/account_screen.dart
          echo '            child: Row(' >> lib/screens/account_screen.dart
          echo '              children: [' >> lib/screens/account_screen.dart
          echo '                CircleAvatar(' >> lib/screens/account_screen.dart
          echo '                  radius: 30,' >> lib/screens/account_screen.dart
          echo '                  backgroundColor: Color(0xFFE31E24),' >> lib/screens/account_screen.dart
          echo '                  child: Icon(Icons.person, color: Colors.white, size: 30),' >> lib/screens/account_screen.dart
          echo '                ),' >> lib/screens/account_screen.dart
          echo '                SizedBox(width: 16),' >> lib/screens/account_screen.dart
          echo '                Expanded(' >> lib/screens/account_screen.dart
          echo '                  child: Column(' >> lib/screens/account_screen.dart
          echo '                    crossAxisAlignment: CrossAxisAlignment.start,' >> lib/screens/account_screen.dart
          echo '                    children: [' >> lib/screens/account_screen.dart
          echo '                      Text("Conectează-te", style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),' >> lib/screens/account_screen.dart
          echo '                      Text("Pentru a accesa contul tău", style: TextStyle(color: Colors.grey[600])),' >> lib/screens/account_screen.dart
          echo '                    ],' >> lib/screens/account_screen.dart
          echo '                  ),' >> lib/screens/account_screen.dart
          echo '                ),' >> lib/screens/account_screen.dart
          echo '                Icon(Icons.arrow_forward_ios, color: Colors.grey[400]),' >> lib/screens/account_screen.dart
          echo '              ],' >> lib/screens/account_screen.dart
          echo '            ),' >> lib/screens/account_screen.dart
          echo '          ),' >> lib/screens/account_screen.dart
          echo '          SizedBox(height: 24),' >> lib/screens/account_screen.dart
          echo '          Card(' >> lib/screens/account_screen.dart
          echo '            child: Column(' >> lib/screens/account_screen.dart
          echo '              children: [' >> lib/screens/account_screen.dart
          echo '                ListTile(' >> lib/screens/account_screen.dart
          echo '                  leading: Icon(Icons.history, color: Color(0xFFE31E24)),' >> lib/screens/account_screen.dart
          echo '                  title: Text("Comenzile mele"),' >> lib/screens/account_screen.dart
          echo '                  subtitle: Text("Vezi istoricul comenzilor"),' >> lib/screens/account_screen.dart
          echo '                  trailing: Icon(Icons.arrow_forward_ios),' >> lib/screens/account_screen.dart
          echo '                ),' >> lib/screens/account_screen.dart
          echo '                Divider(),' >> lib/screens/account_screen.dart
          echo '                ListTile(' >> lib/screens/account_screen.dart
          echo '                  leading: Icon(Icons.favorite, color: Color(0xFFE31E24)),' >> lib/screens/account_screen.dart
          echo '                  title: Text("Produse favorite"),' >> lib/screens/account_screen.dart
          echo '                  subtitle: Text("Lista dorințelor"),' >> lib/screens/account_screen.dart
          echo '                  trailing: Icon(Icons.arrow_forward_ios),' >> lib/screens/account_screen.dart
          echo '                ),' >> lib/screens/account_screen.dart
          echo '                Divider(),' >> lib/screens/account_screen.dart
          echo '                ListTile(' >> lib/screens/account_screen.dart
          echo '                  leading: Icon(Icons.help_outline, color: Color(0xFFE31E24)),' >> lib/screens/account_screen.dart
          echo '                  title: Text("Ajutor și suport"),' >> lib/screens/account_screen.dart
          echo '                  subtitle: Text("contact@hookbaits.ro"),' >> lib/screens/account_screen.dart
          echo '                  trailing: Icon(Icons.arrow_forward_ios),' >> lib/screens/account_screen.dart
          echo '                ),' >> lib/screens/account_screen.dart
          echo '              ],' >> lib/screens/account_screen.dart
          echo '            ),' >> lib/screens/account_screen.dart
          echo '          ),' >> lib/screens/account_screen.dart
          echo '        ],' >> lib/screens/account_screen.dart
          echo '      ),' >> lib/screens/account_screen.dart
          echo '    );' >> lib/screens/account_screen.dart
          echo '  }' >> lib/screens/account_screen.dart
          echo '}' >> lib/screens/account_screen.dart

      - name: Copy app icon
        run: |
          ls -la Hook_alb-400x122.png
          mkdir -p mobile_app/assets
          cp Hook_alb-400x122.png mobile_app/assets/icon.png

      - name: Configure app icon
        working-directory: mobile_app
        run: |
          flutter pub add dev:flutter_launcher_icons
          if ! grep -q "flutter_launcher_icons:" pubspec.yaml; then
            echo '' >> pubspec.yaml
            echo 'flutter_launcher_icons:' >> pubspec.yaml
            echo '  android: true' >> pubspec.yaml
            echo '  ios: false' >> pubspec.yaml
            echo '  image_path: "assets/icon.png"' >> pubspec.yaml
            echo '  adaptive_icon_background: "#FFFFFF"' >> pubspec.yaml
            echo '  adaptive_icon_foreground: "assets/icon.png"' >> pubspec.yaml
          fi
          flutter packages get
          dart run flutter_launcher_icons:main

      - name: Configure Android
        working-directory: mobile_app
        run: |
          if [ -f android/app/build.gradle ]; then
            sed -i "s/minSdkVersion [0-9]\+/minSdkVersion 21/" android/app/build.gradle
            sed -i "s/compileSdkVersion [0-9]\+/compileSdkVersion 34/" android/app/build.gradle
            sed -i "s/targetSdkVersion [0-9]\+/targetSdkVersion 34/" android/app/build.gradle
          fi
          sed -i 's/<string name="app_name">.*<\/string>/<string name="app_name">Hookbaits<\/string>/' android/app/src/main/res/values/strings.xml

      - name: Build APK
        working-directory: mobile_app
        env:
          WC_CONSUMER_KEY: ${{ secrets.WC_CONSUMER_KEY }}
          WC_CONSUMER_SECRET: ${{ secrets.WC_CONSUMER_SECRET }}
        run: flutter build apk --release --dart-define=WC_CONSUMER_KEY="${WC_CONSUMER_KEY}" --dart-define=WC_CONSUMER_SECRET="${WC_CONSUMER_SECRET}"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: hookbaits-apk
          path: mobile_app/build/app/outputs/**/*.apk




